# 选择一个基础镜像
FROM node:18

# 决定用户
USER root

# 把当前文件夹里的所有文件拷进docker
# 会依据.dockerignore文件忽略掉不需要的文件
ADD . /opt/code
WORKDIR /opt/code

# 环境变量配置, 列出所有的环境变量即可
# 注意, 这是环境变量, 你的程序应该从process.env读取环境变量
ENV TGWD_TOKEN=${TGWD_TOKEN} \
    TGWD_SECRET=${TGWD_SECRET} \
    TGWD_PORT=${TGWD_PORT} \
    TGWD_DOMAIN=${TGWD_DOMAIN} \
    TGWD_FRONTEND_DOMAIN=${TGWD_FRONTEND_DOMAIN} \
    TGWD_CFTS_API_KEY=${TGWD_CFTS_API_KEY}

# 执行一些命令来做准备工作
# 这会在打包镜像时运行
RUN npm install pm2 -g
RUN yarn install
RUN npx tsc --build

# 运行服务
# 这会在启动镜像时运行
# 因为pm2是守护进程式的, 不会阻塞shell, 而shell退出了docker就没了, 所以这里让pm2一直打日志, 既阻塞了shell又能看到日志
CMD NODE_ENV=production DEBUG=tgwd:* pm2 start dist/app.js --name tg-watchdog && pm2 logs -f

# 在这个目录执行
# docker build -t 镜像文件名 .
# 就可以打包了
